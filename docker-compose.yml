# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env

  redis:
    image: redis:7-alpine

  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: